import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Padding(
            padding: const EdgeInsets.all(0.0),
            child: Container(
              height: 170,
              child: Image.network(
                'https://static.wixstatic.com/media/818cbe_6b80915765e4490eae3775030fe869d4~mv2.png',
                fit: BoxFit.contain,
              ),
            ),
          ),
          toolbarHeight: 100,
          backgroundColor: Color(0xFFFCF7F3),
        ),
        body: SafeArea(
          child: SingleChildScrollView( // Enable scrolling for the entire body
            child: Column(
              children: [
                LinkBox(),
                MyHomePage(),
                HomePage(),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class LinkBox extends StatelessWidget {
  final List<Map<String, String>> links = [
    {'title': 'Food', 'url': 'https://example.com/1'},
    {'title': 'Shopping', 'url': 'https://example.com/2'},
    {'title': 'Massage', 'url': 'https://example.com/3'},
    {'title': 'Fun', 'url': 'https://example.com/4'},
    {'title': 'Salon/Nail', 'url': 'https://example.com/5'},
    {'title': 'Hotel', 'url': 'https://example.com/6'},
  ];

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.all(5.0),
      margin: const EdgeInsets.symmetric(vertical: 0.0),
      decoration: BoxDecoration(
        color: Color(0xFFF2F2F2),
        borderRadius: BorderRadius.circular(0),
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: links.map((link) {
          return GestureDetector(
            onTap: () async {
              if (await canLaunch(link['url']!)) {
                await launch(link['url']!);
              } else {
                throw 'Could not launch ${link['url']}';
              }
            },
            child: Text(
              link['title']!,
              style: TextStyle(color: Colors.black, fontSize: 16),
            ),
          );
        }).toList(),
      ),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _searchController = TextEditingController();
  String _selectedCategory = 'All';
  List<String> _results = [
    'Example Restaurant 1',
    'Example Restaurant 2',
    'Example Mall 1',
    'Example Mall 2',
    'Example Kid Friendly Mall',
    'Example Pet Friendly Mall',
    'Example Event 1',
    'Example Event 2',
  ];

  List<ButtonData> _categoryButtonData = [
    ButtonData(icon: Icons.grid_view, text: 'All'),
    ButtonData(icon: Icons.map_outlined, text: 'Nearby Malls'),
    ButtonData(icon: Icons.child_care_outlined, text: 'Kid Friendly Malls'),
    ButtonData(icon: Icons.pets_outlined, text: 'Pet Friendly Malls'),
    ButtonData(icon: Icons.calendar_today_outlined, text: 'Events'),
  ];

  @override
  Widget build(BuildContext context) {
    List<String> filteredResults = _filterResults();

    return Padding(
      padding: const EdgeInsets.only(bottom: 16.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Padding(
            padding: const EdgeInsets.all(20.0),
            child: TextField(
              controller: _searchController,
              decoration: InputDecoration(
                hintText: 'Search',
                border: OutlineInputBorder(),
                suffixIcon: _searchController.text.isNotEmpty
                    ? IconButton(
                        icon: Icon(Icons.clear),
                        onPressed: () {
                          setState(() {
                            _searchController.clear();
                          });
                        },
                      )
                    : null,
              ),
              onChanged: (value) {
                setState(() {});
              },
            ),
          ),
          SizedBox(height: 32.0),
          Wrap(
            spacing: 16.0,
            runSpacing: 16.0,
            children: _categoryButtonData.map((data) {
              return Material(
                color: _selectedCategory == data.text
                    ? Colors.orange
                    : Colors.grey[200],
                elevation: 2.0,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(8.0),
                ),
                child: InkWell(
                  borderRadius: BorderRadius.circular(8.0),
                  onTap: () {
                    setState(() {
                      _selectedCategory = data.text;
                    });
                  },
                  child: Padding(
                    padding: EdgeInsets.all(16.0),
                    child: Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        Icon(
                          data.icon,
                          size: 20.0,
                          color: _selectedCategory == data.text
                              ? Colors.white
                              : Colors.black,
                        ),
                        SizedBox(width: 8.0),
                        Text(
                          data.text,
                          style: TextStyle(
                            color: _selectedCategory == data.text
                                ? Colors.white
                                : Colors.black,
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              );
            }).toList(),
          ),
          SizedBox(height: 16.0),
          ListView.builder(
            shrinkWrap: true,
            physics: NeverScrollableScrollPhysics(), // Disable scrolling for inner list
            itemCount: filteredResults.length,
            itemBuilder: (context, index) {
              return ListTile(
                title: Text(filteredResults[index]),
              );
            },
          ),
        ],
      ),
    );
  }

  List<String> _filterResults() {
    List<String> filteredResults = _results.where((result) {
      return result.toLowerCase().contains(_searchController.text.toLowerCase());
    }).toList();

    switch (_selectedCategory) {
      case 'Nearby Malls':
        return filteredResults.where((result) => result.contains('Mall')).toList();
      case 'Kid Friendly Malls':
        return filteredResults.where((result) => result.contains('Kid Friendly')).toList();
      case 'Pet Friendly Malls':
        return filteredResults.where((result) => result.contains('Pet Friendly')).toList();
      case 'Events':
        return filteredResults.where((result) => result.contains('Event')).toList();
      default:
        return filteredResults;
    }
  }
}

class ButtonData {
  final IconData icon;
  final String text;

  ButtonData({
    required this.icon,
    required this.text,
  });
}

final shopData = [
  {
    "name": "Nearby Shopping Malls",
    "price_range": "\$\$-\$\$\$",
    "rating": "4.5/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  },
  {
    "name": "Laksa Museum",
    "price_range": "\$-\$\$",
    "rating": "4.2/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  },
  {
    "name": "The Kiffness is in Town!",
    "price_range": "\$-\$\$",
    "rating": "4.2/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  },
  {
    "name": "Spicy Chilli World",
    "price_range": "\$\$-\$\$\$",
    "rating": "4.8/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  },
  {
    "name": "Manyu's Bouncy Castle",
    "price_range": "\$\$\$\$\$-\$\$\$\$\$\$",
    "rating": "20/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  },
  {
    "name": "Pug LouLou's Flower Crown Collection",
    "price_range": "\$\$-\$\$\$",
    "rating": "10/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  },
  {
    "name": "Handmade Pottery",
    "price_range": "\$\$-\$\$\$",
    "rating": "4.7/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  },
  {
    "name": "Vintage Record Store",
    "price_range": "\$-\$\$",
    "rating": "4.3/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  },
  {
    "name": "Gourmet Food Market",
    "price_range": "\$\$-\$\$\$",
    "rating": "4.9/5",
    "image": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRE1ybtHZxX3y-0h2iohXy3d-1VC30x_HSqujMosMdjB9FnITAWN8Qrx51QGjoHnDcaIbI&usqp=CAU"
  }
];

class HomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SizedBox(height: 100),
        Text('Nearby Shopping Malls', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
        SizedBox(height: 25),
        ShoppingGallery(shopData.sublist(0, 3)),
        SizedBox(height: 48),
        Text('Interesting Shops', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
        SizedBox(height: 16),
        ShoppingGallery(shopData.sublist(3, 6)),
        SizedBox(height: 48),
        Text('Other Recommendations', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
        SizedBox(height: 16),
        ShoppingGallery(shopData.sublist(6)),
      ],
    );
  }
}

class ShoppingGallery extends StatelessWidget {
  final List<Map<String, String>> shopData;

  ShoppingGallery(this.shopData);

  @override
  Widget build(BuildContext context) {
    return Container(
      height: 400,
      child: ListView.builder(
        scrollDirection: Axis.horizontal,
        itemCount: shopData.length,
        itemBuilder: (context, index) {
          final item = shopData[index];
          return ShoppingItem(
            name: item['name']!,
            priceRange: item['price_range']!,
            rating: item['rating']!,
            imageUrl: item['image']!,
          );
        },
      ),
    );
  }
}

class ShoppingItem extends StatelessWidget {
  final String name;
  final String priceRange;
  final String rating;
  final String imageUrl;

  ShoppingItem({
    required this.name,
    required this.priceRange,
    required this.rating,
    required this.imageUrl,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      width: 300,
      padding: EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Image.network(
            imageUrl,
            fit: BoxFit.cover,
            height: 150,
            width: double.infinity,
          ),
          SizedBox(height: 16),//space between text and images
          Text(name, style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
          SizedBox(height: 8),
          Text('Price range: $priceRange', style: TextStyle(fontSize: 16)),
          SizedBox(height: 8),
          Text('Rating: $rating', style: TextStyle(fontSize: 16)),
        ],
      ),
    );
  }
}
