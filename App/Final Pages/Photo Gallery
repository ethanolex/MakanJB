import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Padding(
            padding: const EdgeInsets.all(0.0), // Add padding to the title
            child: Container(
              height: 170,
              child: Image.network(
                'https://static.wixstatic.com/media/818cbe_6b80915765e4490eae3775030fe869d4~mv2.png', 
                fit: BoxFit.contain,
              ),
            ),
          ),
          toolbarHeight: 100,
          backgroundColor: Color(0xFFFCF7F3),
        ),
        body: Column(
          children: [
            LinkBox(), // Add the link box here
            Expanded(child: PhotoGallery()),
          ],
        ),
      ),
    );
  }
}

class LinkBox extends StatelessWidget {
  final List<Map<String, String>> links = [
    {'title': 'Food', 'url': 'https://example.com/1'},
    {'title': 'Shopping', 'url': 'https://example.com/2'},
    {'title': 'Massage', 'url': 'https://example.com/3'},
    {'title': 'Fun', 'url': 'https://example.com/4'},
    {'title': 'Salon/Nail', 'url': 'https://example.com/5'},
    {'title': 'Hotel', 'url': 'https://example.com/6'},
  ];

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.all(5.0),
      margin: const EdgeInsets.symmetric(horizontal: 0.0, vertical: 0.0),
      decoration: BoxDecoration(
        color: Color(0xFFF2F2F2),
        borderRadius: BorderRadius.circular(0),
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly, // Space links evenly
        children: links.map((link) {
          return GestureDetector(
            onTap: () async {
              if (await canLaunch(link['url']!)) {
                await launch(link['url']!);
              } else {
                throw 'Could not launch ${link['url']}';
              }
            },
            child: Text(
              link['title']!,
              style: TextStyle(color: Colors.black, fontSize: 16),
            ),
          );
        }).toList(),
      ),
    );
  }
}



class PhotoGallery extends StatelessWidget {
  final List<String> imageUrls = [
'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/17/42/b2/0b/yumyum.jpg?w=500&h=-1&s=1', // Replace with actual image URLs
    'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/16/a6/39/52/20190228-200728-largejpg.jpg?w=600&h=-1&s=1',//photo 2
    'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/16/a4/4c/c9/table-setting.jpg?w=1400&h=-1&s=1',//photo 3
    'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/16/a4/4b/bb/outside-view-of-the-restaurant.jpg?w=1400&h=-1&s=1',//photo 4
    'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/16/a4/4c/56/tasty-to-fu.jpg?w=1400&h=-1&s=1',//photo 5
        'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/26/c2/e3/84/caption.jpg?w=1100&h=-1&s=1',//photo 6
            'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/26/c2/e3/82/caption.jpg?w=1100&h=-1&s=1',//photo 7
    'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/26/c2/e3/81/caption.jpg?w=1100&h=-1&s=1',//photo 8
    'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/18/56/4c/2c/photo4jpg.jpg?w=500&h=-1&s=1',//photo 9
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Link in the top left corner
            GestureDetector(
              onTap: () {
                // Handle the link click here
                // For example, navigate back or open a URL
                Navigator.pop(context); // This will go back to the previous screen
              },
              child: Text(
                'Back',
                style: TextStyle(
                  color: Colors.blue,
                  fontSize: 16,
                  decoration: TextDecoration.underline,
                ),
              ),
            ),
            SizedBox(height: 20), // Space between link and title
            Center(
              child: Text(
                'Warakuya Japanese Garden',
                style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
              ),
            ),
            SizedBox(height: 20), // Space between title and gallery
            Expanded(
              child: GridView.builder(
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 2,
                  crossAxisSpacing: 16.0,
                  mainAxisSpacing: 16.0,
                ),
                itemCount: imageUrls.length,
                itemBuilder: (context, index) {
                  return _buildImageItem(context, imageUrls[index]);
                },
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildImageItem(BuildContext context, String imageUrl) {
    return MouseRegion(
      onEnter: (_) => _onHover(context, imageUrl, true),
      onExit: (_) => _onHover(context, imageUrl, false),
      child: GestureDetector(
        onTap: () => _showImageDialog(context, imageUrl),
        child: AnimatedContainer(
          duration: Duration(milliseconds: 200),
          curve: Curves.easeInOut,
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(8),
            boxShadow: [
              BoxShadow(color: Colors.black26, blurRadius: 4, offset: Offset(2, 2)),
            ],
          ),
          child: ClipRRect(
            borderRadius: BorderRadius.circular(8),
            child: Image.network(
              imageUrl,
              fit: BoxFit.cover,
              width: 100,
              height: 100,
            ),
          ),
        ),
      ),
    );
  }

  void _onHover(BuildContext context, String imageUrl, bool isHovered) {
    // Optional: You can implement hover effects here (if needed)
  }

  void _showImageDialog(BuildContext context, String imageUrl) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return Dialog(
          child: Container(
            width: 400,
            height: 400,
            child: Image.network(
              imageUrl,
              fit: BoxFit.cover,
            ),
          ),
        );
      },
    );
  }
}
