import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Search Bar and Buttons',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _searchController = TextEditingController();
  String _selectedCategory = 'All';
  List<String> _results = [
    'Example Restaurant 1',
    'Example Restaurant 2',
    'Example Mall 1',
    'Example Mall 2',
    'Example Kid Friendly Mall',
    'Example Pet Friendly Mall',
    'Example Event 1',
    'Example Event 2',
  ];

  List<ButtonData> _categoryButtonData = [
    ButtonData(
      icon: Icons.grid_view,
      text: 'All',
    ),
    ButtonData(
      icon: Icons.map_outlined,
      text: 'Nearby Malls',
    ),
    ButtonData(
      icon: Icons.child_care_outlined,
      text: 'Kid Friendly Malls',
    ),
    ButtonData(
      icon: Icons.pets_outlined,
      text: 'Pet Friendly Malls',
    ),
    ButtonData(
      icon: Icons.calendar_today_outlined,
      text: 'Events',
    ),
  ];

  @override
  Widget build(BuildContext context) {
    List<String> filteredResults = _filterResults();

    return Scaffold(
      body: Padding(
        padding: EdgeInsets.all(20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            TextField(
              controller: _searchController,
              decoration: InputDecoration(
                hintText: 'Search',
                border: OutlineInputBorder(),
                suffixIcon: _searchController.text.isNotEmpty
                    ? IconButton(
                        icon: Icon(Icons.clear),
                        onPressed: () {
                          setState(() {
                            _searchController.clear();
                          });
                        },
                      )
                    : null,
              ),
              onChanged: (value) {
                setState(() {});
              },
            ),
            SizedBox(height: 16.0),
            Wrap(
              spacing: 16.0,
              runSpacing: 16.0,
              children: _categoryButtonData.map((data) {
                return Material(
                  color: _selectedCategory == data.text
                      ? Colors.orange
                      : Colors.grey[200],
                  elevation: 2.0,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  child: InkWell(
                    borderRadius: BorderRadius.circular(8.0),
                    onTap: () {
                      setState(() {
                        _selectedCategory = data.text;
                      });
                    },
                    child: Padding(
                      padding: EdgeInsets.all(16.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Icon(
                            data.icon,
                            size: 20.0,
                            color: _selectedCategory == data.text
                                ? Colors.white
                                : Colors.black,
                          ),
                          SizedBox(width: 8.0),
                          Text(
                            data.text,
                            style: TextStyle(
                              color: _selectedCategory == data.text
                                  ? Colors.white
                                  : Colors.black,
                            ),
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              }).toList(),
            ),
            SizedBox(height: 16.0),
            Expanded(
              child: ListView.builder(
                itemCount: filteredResults.length,
                itemBuilder: (context, index) {
                  return ListTile(
                    title: Text(filteredResults[index]),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }

  List<String> _filterResults() {
    List<String> filteredResults = _results.where((result) {
      return result.toLowerCase().contains(_searchController.text.toLowerCase());
    }).toList();

    switch (_selectedCategory) {
      case 'Nearby Malls':
        return filteredResults.where((result) => result.contains('Mall')).toList();
      case 'Kid Friendly Malls':
        return filteredResults.where((result) => result.contains('Kid Friendly'))
            .toList();
      case 'Pet Friendly Malls':
        return filteredResults.where((result) => result.contains('Pet Friendly'))
            .toList();
      case 'Events':
        return filteredResults.where((result) => result.contains('Event')).toList();
      default:
        return filteredResults;
    }
  }
}

class ButtonData {
  final IconData icon;
  final String text;

  ButtonData({
    required this.icon,
    required this.text,
  });
}
